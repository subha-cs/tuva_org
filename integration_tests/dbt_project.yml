name: 'integration_tests'
version: '1.0.0'
config-version: 2

profile: default

vars:
  clinical_enabled: true
  ## Use this variable to run the project with synthetic data loaded as seeds
  # otherwise set to false and set the input vars below
  test_data_override: true


  ## Update these vars to use your own data as input, do not comment out
  # enabled logic has been added to the sources config
  input_database: medicare_lds_five_percent
  input_schema: input_layer

  tuva_last_run: '{{ run_started_at.astimezone(modules.pytz.timezone("UTC")) }}'
  ## All Tuva Data Marts
  #tuva_marts_enabled: true

  
  ## Individual Tuva Data Marts
  # acute_inpatient_enabled: false
  # ccsr_enabled: false
  # cms_chronic_conditions_enabled: false
  # claims_date_profiling_enabled: false
  # cms_hcc_enabled: false
  # core_enabled: false
  # data_profiling_enabled: false
  # member_months_enabled: false
  # pmpm_enabled: false
  # quality_measures_reporting_enabled: false
  # readmissions_enabled: false
  # service_category_grouper_enabled: false
  # tuva_chronic_conditions_enabled: false


model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"
clean-targets:
  - "target"
  - "dbt_packages"


dispatch:
  - macro_namespace: 'the_tuva_project'
    search_order: ['integration_tests','the_tuva_project']


seeds:
  integration_tests:
    eligibility_seed:
      +post-hook: "{{ the_tuva_project.load_seed('tuva-public-resources/tuva_synthetic_data','eligibility.csv',headers=true) }}"
    medical_claim_seed:
      +post-hook: "{{ the_tuva_project.load_seed('tuva-public-resources/tuva_synthetic_data','medical_claim.csv',headers=true) }}"
    pharmacy_claim_seed:
      +post-hook: "{{ the_tuva_project.load_seed('tuva-public-resources/tuva_synthetic_data','pharmacy_claim.csv',headers=true) }}"
